extends ../../../layout.pug

block title
    title STATUS

block content
    +header('../../groupoid.svg', 'Project Status', 'Implemented and Awaiting features of the Om/Inf')
    article.main
        .status
            aside
                time DATE: 19 MAR 2016

            h2 Compiler Passes
            ol
                li <a style='color:red;' href='/inf/#macro'>INF</a> &mdash; Macro Expansion
                li <a href='../om/#normal'>TYPE</a> &mdash; Typechecking
                li <a href='../om/#normal'>NORMAL</a> &mdash; Normalization
                li <a href='../om/#erased'>ERASE</a> &mdash; Type Information Erasure
                li <a style='color:red;' href='../exe/#macro'>COMPACT</a> &mdash; Compress Terms
                li <a href='../om/#extract'>EXTRACT  </a> &mdash; Extract VM Lambda

            h2 Logic
            ol
                li <a href='../inf/#macro'>REC</a> &mdash; Recursor
                li <a href='../om/#normal'>INDUCTION</a> &mdash; Dependent Eliminator
                li <a href='../types/#eq'>EQU</a> &mdash; Propositional Equality
                li <a href='../types/#eq'>SIMPLE</a> &mdash; Simplification, K combinator
                li <a href='../types/#eq'>FREGE</a> &mdash; Frege, S combinator
                li <a href='../types/#eq'>PROP</a> &mdash; Propositions

            h2 Macros
            ol
                li <a style='color:red;' href='../inf/#case'>CASE</a> &mdash; Patterm Matching
                li <a style='color:red;' href='../inf/#let'>LET</a> &mdash; Extract VM Lambda
                li <a style='color:red;' href='../inf/#data'>DATA</a> &mdash; Inductive Definition
                li <a style='color:red;' href='../inf/#record'>RECORD</a> &mdash; Coinductive Definition

            h2 Base Library
            ol
                li <a href='../types/#IO'>IO</a> &mdash; Input/Output Free Monad
                li <a href='../types/#IOI'>IOI</a> &mdash; Infinity Input/Output Cofree Comonad
                li <a href='../types/#lazy'>Lazy</a> &mdash; Lazy Type
                li <a href='../types/#bool'>Bool</a> &mdash; Boolean
                li <a href='../types/#option'>Maybe</a> &mdash; Maybe
                li <a href='../types/#nat'>Nat</a> &mdash; Natural Number Object
                li <a href='../types/#list'>List</a> &mdash; Inductive List
                li <a href='../types/#unit'>Unit</a> &mdash; 0-Tuple
                li <a href='../types/#mon'>Mon</a> &mdash; 1-Tuple
                li <a href='../types/#prod'>Prod</a> &mdash; 2-Tuple
                li <a href='../types/#morte'>Morte</a> &mdash; Recursive and Corecursive samples

            h2 Backends
            ol
                li <a href='../extract'>Erlang/OTP</a> &mdash; BEAM and LING virual machines.
                li <a href='../extract'>O</a> &mdash; CPS Interpreter.
                li <a style='color:red;' href='../extract'>C++</a> &mdash; clang, HN0
                li <a style='color:red;' href='../extract'>LLVM</a> &mdash; LLVM
                li <a style='color:red;' href='../extract'>FPGA</a> &mdash; FPGA

